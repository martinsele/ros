<?xml version="1.0"?>

<launch>
  <arg name="world_file"  default="$(find tech_task)/worlds/obstacles.world"/>

  <arg name="base"      value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
  <arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 --> 
  <arg name="gui" default="true"/>
  <arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons --> 
  <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro --> 
  <arg name="world_frame" value="/map"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch"> 
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(arg world_file)"/>
  </include>

  <!-- Run the map server -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(find tech_task)/map/map.yaml" >
    <param name="frame_id" value="$(arg world_frame)" />
  </node>


  <!-- Broadcaster of Gazebo's ground truth positions -->
  <node name="pose_broadcaster" pkg="tech_task" type="pose_broadcaster" output="screen">
    <param name="world_frame" value="$(arg world_frame)" />
    <param name="odometry_topic" value="ground_truth/pose" />
  </node>

<!-- -->
 <node name="rviz" pkg="rviz" type="rviz" args="-d $(find tech_task)/rviz/robot.rviz" />


  <!-- DECLARE NAMESPACES -->
  <arg name="ns1" default="robot1"/>
  <arg name="ns2" default="robot2"/> 

  <!-- HERE ARE ROBOTS CREATED -->
  <!-- robot1 -->
  <group ns="$(arg ns1)"> 

  <!-- <include file="$(find turtlebot_gazebo)/launch/includes/kobuki.launch.xml"> -->

  <include file="$(find tech_task)/launch/robot.launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
    <arg name="name" value="$(arg ns1)"/> 
    <arg name="x" value="-4.0"/>
    <arg name="y" value="-7.0"/>
    <arg name="z" value="0.0"/>
    <arg name="tf_prefix" value="$(arg ns1)"/>
    <arg name="startPlanner" value="true"/>
    <arg name="goal_x" value="4.8"/>
    <arg name="goal_y" value="6.8"/>
  </include>  

  <node pkg="tf" type="static_transform_publisher" name="base_ref" args="-4 -7 0 0 0 0 /map /$(arg ns1)/odom 100" />

  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="$(arg ns1)/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="camera/depth/image_raw"/>
  </node>
 </group> 


  <!-- robot2 -->
 <group ns="$(arg ns2)"> 

  <include file="$(find tech_task)/launch/robot.launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
    <arg name="name" value="$(arg ns2)"/> 
    <arg name="x" value="-4.0"/>
    <arg name="y" value="-6.0"/>
    <arg name="z" value="0.0"/>
    <arg name="tf_prefix" value="$(arg ns2)"/>
    <arg name="startPlanner" value="true"/>
    <arg name="goal_x" value="4.8"/>
    <arg name="goal_y" value="5.8"/>
  </include>
  
  <node pkg="tf" type="static_transform_publisher" name="base_ref" args="-4 -6 0 0 0 0 /map /$(arg ns2)/odom 100" /> 

  <!-- Fake laser -->
 <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="$(arg ns2)/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="camera/depth/image_raw"/>
  </node>
 </group> 

</launch>
